/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentacion;

import Entity.Licencia;
import Entity.Persona;
import Entity.Placas;
import Entity.Tramite;
import INegocio.IPersonaNegocio;
import INegocio.ITramiteNegocio;
import IPersistencia.IConexionBD;
import IPersistencia.IPersonaDAO;
import IPersistencia.ITramiteDAO;
import Negocio.TramiteNegocio;
import Persistencia.ConexionBD;
import Persistencia.Encriptacion;
import Persistencia.TramiteDAO;
import java.awt.Button;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.InputStream;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;

/**
 *
 * @author DELL User
 */
public class frmHistorialTramites extends javax.swing.JFrame {

    private List<Persona> listaActual;
    private IPersonaNegocio personaNegocio;
    private int row, columna;
    private JButton btnHistorial = new JButton("Generar reporte");

    /**
     * Creates new form frmHistorialTramites
     */
    public frmHistorialTramites(IPersonaNegocio personaNegocio) {

        initComponents();
        this.personaNegocio = personaNegocio;

        tabla();
        llenarTabla();
    }

    public void tabla() {
        tblConsultas.setDefaultRenderer(Object.class, new RenderTabla());
        DefaultTableModel defa = new DefaultTableModel();
        tblConsultas.setModel(defa);
        defa.addColumn("Nombre");
        defa.addColumn("Curp");
        defa.addColumn("RFC");
        defa.addColumn("Fecha de nacimiento");
        defa.addColumn("Telefono");
        defa.addColumn("Historial");
        tblConsultas.setRowHeight(40);
        for (int i = 0; i < 2; i++) {
            Object[] datos = new Object[defa.getColumnCount()];
            datos[0] = "prueba";
            datos[1] = "prueba";
            datos[2] = "prueba";
            datos[3] = "prueba";
            datos[4] = "prueba";
            datos[5] = btnHistorial;
            defa.addRow(datos);
        }

        defa.fireTableDataChanged();
    }

    public void llenarTabla() {
        listaActual = personaNegocio.BuscarPersonas(txtBusqueda.getText());
        Encriptacion a = new Encriptacion();
        listaActual = a.desencriptarLista(listaActual);
        DefaultTableModel defa = (DefaultTableModel) tblConsultas.getModel();
        defa.setRowCount(0);
        for (int i = 0; i < listaActual.size(); i++) {
            Object[] datos = new Object[defa.getColumnCount()];
            datos[0] = listaActual.get(i).getNombre();
            datos[1] = listaActual.get(i).getCurp();
            datos[2] = listaActual.get(i).getRfc();
            datos[3] = listaActual.get(i).getFechaNacimiento();
            datos[4] = listaActual.get(i).getTelefono();
            datos[5] = btnHistorial;
            defa.addRow(datos);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBusqueda = new javax.swing.JTextField();
        btnRegresar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblConsultas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Busqueda:");

        txtBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBusquedaActionPerformed(evt);
            }
        });

        btnRegresar.setText("Regresar");
        btnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegresarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Consultas");

        jScrollPane3.setFocusable(false);

        tblConsultas = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int column){
                return false;
            }
        };
        tblConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblConsultas.getTableHeader().setReorderingAllowed(false);
        tblConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblConsultasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblConsultas);

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(btnRegresar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegresar)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegresarActionPerformed
        frmInicio frminicio = new frmInicio();
        frminicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRegresarActionPerformed

    private void txtBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBusquedaActionPerformed

    private void tblConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblConsultasMouseClicked
        columna = tblConsultas.getColumnModel().getColumnIndexAtX(evt.getX());
        row = evt.getY() / tblConsultas.getRowHeight();
        if (columna <= tblConsultas.getColumnCount() && columna >= 0 && row <= tblConsultas.getRowCount() && row >= 0) {
            Object objeto = tblConsultas.getValueAt(row, columna);
            if (objeto instanceof JButton) {
                ((JButton) objeto).doClick();
                JButton boton = (JButton) objeto;
                if (boton.equals(btnHistorial)) {

                    //AQUI LO QUE HARA EL BOTON
                    //Row es para especificar en que columna se pulso el boton
                    System.out.println(listaActual.get(row).getId());
                    IConexionBD conexion = new ConexionBD();
                    ITramiteDAO itramitedao = new TramiteDAO(conexion);
                    ITramiteNegocio tramitenegocio = new TramiteNegocio(itramitedao);
                    List<Tramite> listaTramitePersona = tramitenegocio.listaTramitePersona(listaActual.get(row));
                    Encriptacion AES = new Encriptacion();
                    listaTramitePersona = AES.desencriptarListaTramite(listaTramitePersona);
                    if (!listaTramitePersona.isEmpty()) {
                        int respuesta = JOptionPane.showConfirmDialog(rootPane, "Estás seguro de crear un PDF?", "Confirmación", JOptionPane.YES_NO_OPTION);
                        if (respuesta == JOptionPane.YES_OPTION) {
                            List<ReporteTramites> listaReporteTramite = new ArrayList<ReporteTramites>();
                            SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");
                            String nombrePersona = "";
                            for (int i = 0; i < listaTramitePersona.size(); i++) {
                                ReporteTramites reporte = new ReporteTramites();

                                Persona personaReporte = listaTramitePersona.get(i).getPersona();
                                nombrePersona = personaReporte.getNombre() + " " + personaReporte.getApellidoPaterno() + " " + personaReporte.getApellidoMaterno();
                                String costo = String.valueOf(listaTramitePersona.get(i).getCosto());
                                String fecha = formato.format(listaTramitePersona.get(i).getFechaTramite().getTime());
                                String tipo = "";
                                if (listaTramitePersona.get(i) instanceof Placas) {
                                    tipo = "Placas";
                                }
                                if (listaTramitePersona.get(i) instanceof Licencia) {
                                    tipo = "Licencias";
                                }

                                ReporteTramites repo = new ReporteTramites(costo, fecha, tipo, nombrePersona);
                                listaReporteTramite.add(repo);
                            }
                            try {
                                Map parametro = new HashMap();
                                LocalDateTime fechaHoraActual = LocalDateTime.now();
                                DateTimeFormatter formatEscrito = DateTimeFormatter.ofPattern("dd 'de' MMMM 'de' yyyy, hh:mm a");
                                String fechaHoraEscrita = fechaHoraActual.format(formatEscrito);
                                parametro.put("fecha", fechaHoraEscrita);
                                parametro.put("historial", ("Cliente : "+nombrePersona));
                                // Cargar los datos en un JRBeanCollectionDataSource
                                JRBeanCollectionDataSource beanColDataSource = new JRBeanCollectionDataSource(listaReporteTramite);

                                // Cargar el archivo JRXML del reporte
                                InputStream reportFile = getClass().getResourceAsStream("/reporteTramite.jrxml");
                                JasperReport jasperReport = JasperCompileManager.compileReport(reportFile);

                                // Llenar el reporte con los datos
                                JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametro, beanColDataSource);

                                // Visualizar el reporte
                                JasperExportManager.exportReportToPdfFile(jasperPrint, "./Reporte_" + nombrePersona + ".pdf");
                            } catch (JRException ex) {
                                Logger.getLogger(frmReporte.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        } else {
                            return;
                        }
                    }
                    // 3. crear clases reportetramites por cada tramite 
                    // 4. crear pdf con la lista de reportestramite  
                }
            }
        }
    }//GEN-LAST:event_tblConsultasMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String busqueda = txtBusqueda.getText();

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmHistorialTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmHistorialTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmHistorialTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmHistorialTramites.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new frmHistorialTramites().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegresar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tblConsultas;
    private javax.swing.JTextField txtBusqueda;
    // End of variables declaration//GEN-END:variables
}
